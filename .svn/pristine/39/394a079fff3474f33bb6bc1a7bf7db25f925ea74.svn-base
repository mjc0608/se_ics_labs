                      | #######################################################################
                      | # Test for copying block of size 63;
                      | #######################################################################
  0x000:              | 	.pos 0
  0x000: 30f434060000 | main:	irmovl Stack, %esp  	# Set up stack pointer
  0x006: 30f534060000 | 	irmovl Stack, %ebp  	# Set up base pointer
                      | 
                      | 	# Set up arguments for copy function and then invoke it
  0x00c: 30f03f000000 | 	irmovl $63, %eax		# src and dst have 63 elements
  0x012: a00f         | 	pushl %eax
  0x014: 30f0f4040000 | 	irmovl dest, %eax	# dst array
  0x01a: a00f         | 	pushl %eax
  0x01c: 30f0e8030000 | 	irmovl src, %eax	# src array
  0x022: a00f         | 	pushl %eax
  0x024: 802a000000   | 	call ncopy		 
  0x029: 00           | 	halt			# should halt with num nonzeros in %eax
  0x02a:              | StartFun:
                      | #/* $begin ncopy-ys */
                      | ##################################################################
                      | # ncopy.ys - Copy a src block of len ints to dst.
                      | # Return the number of positive ints (>0) contained in src.
                      | #
                      | # Include your name and ID here.
                      | #
                      | # Describe how and why you modified the baseline code.
                      | #
                      | ##################################################################
                      | # Do not modify this portion
                      | # Function prologue.
  0x02a:              | ncopy:	
  0x02a: a05f         | 	pushl %ebp			# Save old frame pointer
  0x02c: 2045         | 	rrmovl %esp,%ebp	# Set up new frame pointer
  0x02e: a06f         | 	pushl %esi			#Save callee-save regs
  0x030: a03f         | 	pushl %ebx
  0x032: a07f         | 	pushl %edi
  0x034: 503508000000 | 	mrmovl 8(%ebp),%ebx		# src
  0x03a: 502510000000 | 	mrmovl 16(%ebp),%edx	# len
  0x040: 50150c000000 | 	mrmovl 12(%ebp),%ecx	# dst
                      | 
                      | ##################################################################
                      | # You can modify this portion
                      | 	# Loop header
  0x046: 6300         | 	xorl %eax,%eax		# count = 0;
  0x048:              | Start:
  0x048: c0f2f0ffffff | 	iaddl $-16,%edx
  0x04e: 6222         | 	andl %edx,%edx		# len >=0?
  0x050: 753b020000   | 	jge Loop			# if so, goto loop
  0x055: 6022         | 	addl %edx,%edx
  0x057: 6022         | 	addl %edx,%edx
  0x059: 5022a2000000 | 	mrmovl End_jump_table(%edx),%edx
  0x05f: a02f         | 	pushl %edx
  0x061: 90           | 	ret
                      | 
  0x062:              | Jump_table:
  0x062: dc030000     | 	.long Done
  0x066: 1d020000     | 	.long x0
  0x06a: 04020000     | 	.long x1
  0x06e: eb010000     | 	.long x2
  0x072: d2010000     | 	.long x3
  0x076: b9010000     | 	.long x4
  0x07a: a0010000     | 	.long x5
  0x07e: 87010000     | 	.long x6
  0x082: 6e010000     | 	.long x7
  0x086: 55010000     | 	.long x8
  0x08a: 3c010000     | 	.long x9
  0x08e: 23010000     | 	.long x10
  0x092: 0a010000     | 	.long x11
  0x096: f1000000     | 	.long x12
  0x09a: d8000000     | 	.long x13
  0x09e: bf000000     | 	.long x14
  0x0a2:              | End_jump_table:
  0x0a2: a6000000     | 	.long x15
                      | 
  0x0a6:              | x15:
  0x0a6: 50733c000000 | 	mrmovl 60(%ebx),%edi
  0x0ac: 40713c000000 | 	rmmovl %edi,60(%ecx)
  0x0b2: 6277         | 	andl %edi,%edi
  0x0b4: 71bf000000   | 	jle x14
  0x0b9: c0f001000000 | 	iaddl $1,%eax
                      | 
  0x0bf:              | x14:
  0x0bf: 507338000000 | 	mrmovl 56(%ebx),%edi
  0x0c5: 407138000000 | 	rmmovl %edi,56(%ecx)
  0x0cb: 6277         | 	andl %edi,%edi
  0x0cd: 71d8000000   | 	jle x13
  0x0d2: c0f001000000 | 	iaddl $1,%eax
                      | 
  0x0d8:              | x13:
  0x0d8: 507334000000 | 	mrmovl 52(%ebx),%edi
  0x0de: 407134000000 | 	rmmovl %edi,52(%ecx)
  0x0e4: 6277         | 	andl %edi,%edi
  0x0e6: 71f1000000   | 	jle x12
  0x0eb: c0f001000000 | 	iaddl $1,%eax
                      | 	
  0x0f1:              | x12:
  0x0f1: 507330000000 | 	mrmovl 48(%ebx),%edi
  0x0f7: 407130000000 | 	rmmovl %edi,48(%ecx)
  0x0fd: 6277         | 	andl %edi,%edi
  0x0ff: 710a010000   | 	jle x11
  0x104: c0f001000000 | 	iaddl $1,%eax
                      | 
  0x10a:              | x11:
  0x10a: 50732c000000 | 	mrmovl 44(%ebx),%edi
  0x110: 40712c000000 | 	rmmovl %edi,44(%ecx)
  0x116: 6277         | 	andl %edi,%edi
  0x118: 7123010000   | 	jle x10
  0x11d: c0f001000000 | 	iaddl $1,%eax
                      | 
  0x123:              | x10:
  0x123: 507328000000 | 	mrmovl 40(%ebx),%edi
  0x129: 407128000000 | 	rmmovl %edi,40(%ecx)
  0x12f: 6277         | 	andl %edi,%edi
  0x131: 713c010000   | 	jle x9
  0x136: c0f001000000 | 	iaddl $1,%eax
                      | 
  0x13c:              | x9:
  0x13c: 507324000000 | 	mrmovl 36(%ebx),%edi
  0x142: 407124000000 | 	rmmovl %edi,36(%ecx)
  0x148: 6277         | 	andl %edi,%edi
  0x14a: 7155010000   | 	jle x8
  0x14f: c0f001000000 | 	iaddl $1,%eax
                      | 
  0x155:              | x8:
  0x155: 507320000000 | 	mrmovl 32(%ebx),%edi
  0x15b: 407120000000 | 	rmmovl %edi,32(%ecx)
  0x161: 6277         | 	andl %edi,%edi
  0x163: 716e010000   | 	jle x7
  0x168: c0f001000000 | 	iaddl $1,%eax
                      | 
  0x16e:              | x7:
  0x16e: 50731c000000 | 	mrmovl 28(%ebx),%edi
  0x174: 40711c000000 | 	rmmovl %edi,28(%ecx)
  0x17a: 6277         | 	andl %edi,%edi
  0x17c: 7187010000   | 	jle x6
  0x181: c0f001000000 | 	iaddl $1,%eax
                      | 
  0x187:              | x6:
  0x187: 507318000000 | 	mrmovl 24(%ebx),%edi
  0x18d: 407118000000 | 	rmmovl %edi,24(%ecx)
  0x193: 6277         | 	andl %edi,%edi
  0x195: 71a0010000   | 	jle x5
  0x19a: c0f001000000 | 	iaddl $1,%eax
                      | 	
                      | 
  0x1a0:              | x5:
  0x1a0: 507314000000 | 	mrmovl 20(%ebx),%edi
  0x1a6: 407114000000 | 	rmmovl %edi,20(%ecx)
  0x1ac: 6277         | 	andl %edi,%edi
  0x1ae: 71b9010000   | 	jle x4
  0x1b3: c0f001000000 | 	iaddl $1,%eax
                      | 	
                      | 
  0x1b9:              | x4:
  0x1b9: 507310000000 | 	mrmovl 16(%ebx),%edi
  0x1bf: 407110000000 | 	rmmovl %edi,16(%ecx)
  0x1c5: 6277         | 	andl %edi,%edi
  0x1c7: 71d2010000   | 	jle x3
  0x1cc: c0f001000000 | 	iaddl $1,%eax
                      | 	
  0x1d2:              | x3:
  0x1d2: 50730c000000 | 	mrmovl 12(%ebx),%edi
  0x1d8: 40710c000000 | 	rmmovl %edi,12(%ecx)
  0x1de: 6277         | 	andl %edi,%edi
  0x1e0: 71eb010000   | 	jle x2
  0x1e5: c0f001000000 | 	iaddl $1,%eax
                      | 	
  0x1eb:              | x2:
  0x1eb: 507308000000 | 	mrmovl 8(%ebx),%edi
  0x1f1: 407108000000 | 	rmmovl %edi,8(%ecx)
  0x1f7: 6277         | 	andl %edi,%edi
  0x1f9: 7104020000   | 	jle x1
  0x1fe: c0f001000000 | 	iaddl $1,%eax
                      | 	
  0x204:              | x1:
  0x204: 507304000000 | 	mrmovl 4(%ebx),%edi
  0x20a: 407104000000 | 	rmmovl %edi,4(%ecx)
  0x210: 6277         | 	andl %edi,%edi
  0x212: 711d020000   | 	jle x0
  0x217: c0f001000000 | 	iaddl $1,%eax
                      | 
  0x21d:              | x0:
  0x21d: 507300000000 | 	mrmovl (%ebx),%edi
  0x223: 407100000000 | 	rmmovl %edi,(%ecx)
  0x229: 6277         | 	andl %edi,%edi
  0x22b: 71dc030000   | 	jle Done
  0x230: c0f001000000 | 	iaddl $1,%eax
                      | 
  0x236:              | End_jump:
  0x236: 70dc030000   | 	jmp Done
                      | 
  0x23b:              | Loop:
  0x23b:              | l15:
  0x23b: 50733c000000 | 	mrmovl 60(%ebx),%edi
  0x241: 40713c000000 | 	rmmovl %edi,60(%ecx)
  0x247: 6277         | 	andl %edi,%edi
  0x249: 7154020000   | 	jle l14
  0x24e: c0f001000000 | 	iaddl $1,%eax
                      | 
  0x254:              | l14:
  0x254: 507338000000 | 	mrmovl 56(%ebx),%edi
  0x25a: 407138000000 | 	rmmovl %edi,56(%ecx)
  0x260: 6277         | 	andl %edi,%edi
  0x262: 716d020000   | 	jle l13
  0x267: c0f001000000 | 	iaddl $1,%eax
                      | 
  0x26d:              | l13:
  0x26d: 507334000000 | 	mrmovl 52(%ebx),%edi
  0x273: 407134000000 | 	rmmovl %edi,52(%ecx)
  0x279: 6277         | 	andl %edi,%edi
  0x27b: 7186020000   | 	jle l12
  0x280: c0f001000000 | 	iaddl $1,%eax
                      | 	
  0x286:              | l12:
  0x286: 507330000000 | 	mrmovl 48(%ebx),%edi
  0x28c: 407130000000 | 	rmmovl %edi,48(%ecx)
  0x292: 6277         | 	andl %edi,%edi
  0x294: 719f020000   | 	jle l11
  0x299: c0f001000000 | 	iaddl $1,%eax
                      | 
  0x29f:              | l11:
  0x29f: 50732c000000 | 	mrmovl 44(%ebx),%edi
  0x2a5: 40712c000000 | 	rmmovl %edi,44(%ecx)
  0x2ab: 6277         | 	andl %edi,%edi
  0x2ad: 71b8020000   | 	jle l10
  0x2b2: c0f001000000 | 	iaddl $1,%eax
                      | 
  0x2b8:              | l10:
  0x2b8: 507328000000 | 	mrmovl 40(%ebx),%edi
  0x2be: 407128000000 | 	rmmovl %edi,40(%ecx)
  0x2c4: 6277         | 	andl %edi,%edi
  0x2c6: 71d1020000   | 	jle l9
  0x2cb: c0f001000000 | 	iaddl $1,%eax
                      | 
  0x2d1:              | l9:
  0x2d1: 507324000000 | 	mrmovl 36(%ebx),%edi
  0x2d7: 407124000000 | 	rmmovl %edi,36(%ecx)
  0x2dd: 6277         | 	andl %edi,%edi
  0x2df: 71ea020000   | 	jle l8
  0x2e4: c0f001000000 | 	iaddl $1,%eax
                      | 
  0x2ea:              | l8:
  0x2ea: 507320000000 | 	mrmovl 32(%ebx),%edi
  0x2f0: 407120000000 | 	rmmovl %edi,32(%ecx)
  0x2f6: 6277         | 	andl %edi,%edi
  0x2f8: 7103030000   | 	jle l7
  0x2fd: c0f001000000 | 	iaddl $1,%eax
                      | 
  0x303:              | l7:
  0x303: 50731c000000 | 	mrmovl 28(%ebx),%edi
  0x309: 40711c000000 | 	rmmovl %edi,28(%ecx)
  0x30f: 6277         | 	andl %edi,%edi
  0x311: 711c030000   | 	jle l6
  0x316: c0f001000000 | 	iaddl $1,%eax
                      | 
  0x31c:              | l6:
  0x31c: 507318000000 | 	mrmovl 24(%ebx),%edi
  0x322: 407118000000 | 	rmmovl %edi,24(%ecx)
  0x328: 6277         | 	andl %edi,%edi
  0x32a: 7135030000   | 	jle l5
  0x32f: c0f001000000 | 	iaddl $1,%eax
                      | 	
                      | 
  0x335:              | l5:
  0x335: 507314000000 | 	mrmovl 20(%ebx),%edi
  0x33b: 407114000000 | 	rmmovl %edi,20(%ecx)
  0x341: 6277         | 	andl %edi,%edi
  0x343: 714e030000   | 	jle l4
  0x348: c0f001000000 | 	iaddl $1,%eax
                      | 	
                      | 
  0x34e:              | l4:
  0x34e: 507310000000 | 	mrmovl 16(%ebx),%edi
  0x354: 407110000000 | 	rmmovl %edi,16(%ecx)
  0x35a: 6277         | 	andl %edi,%edi
  0x35c: 7167030000   | 	jle l3
  0x361: c0f001000000 | 	iaddl $1,%eax
                      | 	
  0x367:              | l3:
  0x367: 50730c000000 | 	mrmovl 12(%ebx),%edi
  0x36d: 40710c000000 | 	rmmovl %edi,12(%ecx)
  0x373: 6277         | 	andl %edi,%edi
  0x375: 7180030000   | 	jle l2
  0x37a: c0f001000000 | 	iaddl $1,%eax
                      | 	
  0x380:              | l2:
  0x380: 507308000000 | 	mrmovl 8(%ebx),%edi
  0x386: 407108000000 | 	rmmovl %edi,8(%ecx)
  0x38c: 6277         | 	andl %edi,%edi
  0x38e: 7199030000   | 	jle l1
  0x393: c0f001000000 | 	iaddl $1,%eax
                      | 	
  0x399:              | l1:
  0x399: 507304000000 | 	mrmovl 4(%ebx),%edi
  0x39f: 407104000000 | 	rmmovl %edi,4(%ecx)
  0x3a5: 6277         | 	andl %edi,%edi
  0x3a7: 71b2030000   | 	jle l0
  0x3ac: c0f001000000 | 	iaddl $1,%eax
                      | 
  0x3b2:              | l0:
  0x3b2: 507300000000 | 	mrmovl (%ebx),%edi
  0x3b8: 407100000000 | 	rmmovl %edi,(%ecx)
  0x3be: 6277         | 	andl %edi,%edi
  0x3c0: 71cb030000   | 	jle End_loop
  0x3c5: c0f001000000 | 	iaddl $1,%eax
                      | 
  0x3cb:              | End_loop:
  0x3cb: c0f340000000 | 	iaddl $64,%ebx
  0x3d1: c0f140000000 | 	iaddl $64,%ecx
  0x3d7: 7048000000   | 	jmp Start
                      | ##################################################################
                      | # Do not modify the following section of code
                      | # Function epilogue.
  0x3dc:              | Done:
  0x3dc: b07f         | 	popl %edi			#Restore callee-save registers
  0x3de: b03f         | 	popl %ebx
  0x3e0: b06f         | 	popl %esi
  0x3e2: 2054         | 	rrmovl %ebp,%esp
  0x3e4: b05f         | 	popl %ebp
  0x3e6: 90           | 	ret
                      | ##################################################################
                      | # Keep the following label at the end of your function
  0x3e7:              | End:
                      | #/* $end ncopy-ys */
  0x3e7:              | EndFun:
                      | 
                      | ###############################
                      | # Source and destination blocks 
                      | ###############################
  0x3e8:              | 	.align 4
  0x3e8:              | src:
  0x3e8: 01000000     | 	.long 1
  0x3ec: 02000000     | 	.long 2
  0x3f0: 03000000     | 	.long 3
  0x3f4: 04000000     | 	.long 4
  0x3f8: fbffffff     | 	.long -5
  0x3fc: faffffff     | 	.long -6
  0x400: f9ffffff     | 	.long -7
  0x404: 08000000     | 	.long 8
  0x408: 09000000     | 	.long 9
  0x40c: f6ffffff     | 	.long -10
  0x410: f5ffffff     | 	.long -11
  0x414: f4ffffff     | 	.long -12
  0x418: 0d000000     | 	.long 13
  0x41c: 0e000000     | 	.long 14
  0x420: f1ffffff     | 	.long -15
  0x424: 10000000     | 	.long 16
  0x428: efffffff     | 	.long -17
  0x42c: eeffffff     | 	.long -18
  0x430: edffffff     | 	.long -19
  0x434: ecffffff     | 	.long -20
  0x438: 15000000     | 	.long 21
  0x43c: 16000000     | 	.long 22
  0x440: 17000000     | 	.long 23
  0x444: 18000000     | 	.long 24
  0x448: e7ffffff     | 	.long -25
  0x44c: e6ffffff     | 	.long -26
  0x450: e5ffffff     | 	.long -27
  0x454: 1c000000     | 	.long 28
  0x458: e3ffffff     | 	.long -29
  0x45c: 1e000000     | 	.long 30
  0x460: 1f000000     | 	.long 31
  0x464: 20000000     | 	.long 32
  0x468: dfffffff     | 	.long -33
  0x46c: 22000000     | 	.long 34
  0x470: 23000000     | 	.long 35
  0x474: dcffffff     | 	.long -36
  0x478: dbffffff     | 	.long -37
  0x47c: 26000000     | 	.long 38
  0x480: 27000000     | 	.long 39
  0x484: d8ffffff     | 	.long -40
  0x488: 29000000     | 	.long 41
  0x48c: 2a000000     | 	.long 42
  0x490: 2b000000     | 	.long 43
  0x494: d4ffffff     | 	.long -44
  0x498: d3ffffff     | 	.long -45
  0x49c: d2ffffff     | 	.long -46
  0x4a0: d1ffffff     | 	.long -47
  0x4a4: 30000000     | 	.long 48
  0x4a8: 31000000     | 	.long 49
  0x4ac: 32000000     | 	.long 50
  0x4b0: 33000000     | 	.long 51
  0x4b4: ccffffff     | 	.long -52
  0x4b8: 35000000     | 	.long 53
  0x4bc: caffffff     | 	.long -54
  0x4c0: c9ffffff     | 	.long -55
  0x4c4: 38000000     | 	.long 56
  0x4c8: c7ffffff     | 	.long -57
  0x4cc: c6ffffff     | 	.long -58
  0x4d0: c5ffffff     | 	.long -59
  0x4d4: 3c000000     | 	.long 60
  0x4d8: c3ffffff     | 	.long -61
  0x4dc: c2ffffff     | 	.long -62
  0x4e0: c1ffffff     | 	.long -63
  0x4e4: fadebc00     | 	.long 0xbcdefa # This shouldn't get moved
                      | 
  0x4f0:              | 	.align 16
  0x4f0:              | Predest:
  0x4f0: fadebc00     | 	.long 0xbcdefa
  0x4f4:              | dest:
  0x4f4: abefcd00     | 	.long 0xcdefab
  0x4f8: abefcd00     | 	.long 0xcdefab
  0x4fc: abefcd00     | 	.long 0xcdefab
  0x500: abefcd00     | 	.long 0xcdefab
  0x504: abefcd00     | 	.long 0xcdefab
  0x508: abefcd00     | 	.long 0xcdefab
  0x50c: abefcd00     | 	.long 0xcdefab
  0x510: abefcd00     | 	.long 0xcdefab
  0x514: abefcd00     | 	.long 0xcdefab
  0x518: abefcd00     | 	.long 0xcdefab
  0x51c: abefcd00     | 	.long 0xcdefab
  0x520: abefcd00     | 	.long 0xcdefab
  0x524: abefcd00     | 	.long 0xcdefab
  0x528: abefcd00     | 	.long 0xcdefab
  0x52c: abefcd00     | 	.long 0xcdefab
  0x530: abefcd00     | 	.long 0xcdefab
  0x534: abefcd00     | 	.long 0xcdefab
  0x538: abefcd00     | 	.long 0xcdefab
  0x53c: abefcd00     | 	.long 0xcdefab
  0x540: abefcd00     | 	.long 0xcdefab
  0x544: abefcd00     | 	.long 0xcdefab
  0x548: abefcd00     | 	.long 0xcdefab
  0x54c: abefcd00     | 	.long 0xcdefab
  0x550: abefcd00     | 	.long 0xcdefab
  0x554: abefcd00     | 	.long 0xcdefab
  0x558: abefcd00     | 	.long 0xcdefab
  0x55c: abefcd00     | 	.long 0xcdefab
  0x560: abefcd00     | 	.long 0xcdefab
  0x564: abefcd00     | 	.long 0xcdefab
  0x568: abefcd00     | 	.long 0xcdefab
  0x56c: abefcd00     | 	.long 0xcdefab
  0x570: abefcd00     | 	.long 0xcdefab
  0x574: abefcd00     | 	.long 0xcdefab
  0x578: abefcd00     | 	.long 0xcdefab
  0x57c: abefcd00     | 	.long 0xcdefab
  0x580: abefcd00     | 	.long 0xcdefab
  0x584: abefcd00     | 	.long 0xcdefab
  0x588: abefcd00     | 	.long 0xcdefab
  0x58c: abefcd00     | 	.long 0xcdefab
  0x590: abefcd00     | 	.long 0xcdefab
  0x594: abefcd00     | 	.long 0xcdefab
  0x598: abefcd00     | 	.long 0xcdefab
  0x59c: abefcd00     | 	.long 0xcdefab
  0x5a0: abefcd00     | 	.long 0xcdefab
  0x5a4: abefcd00     | 	.long 0xcdefab
  0x5a8: abefcd00     | 	.long 0xcdefab
  0x5ac: abefcd00     | 	.long 0xcdefab
  0x5b0: abefcd00     | 	.long 0xcdefab
  0x5b4: abefcd00     | 	.long 0xcdefab
  0x5b8: abefcd00     | 	.long 0xcdefab
  0x5bc: abefcd00     | 	.long 0xcdefab
  0x5c0: abefcd00     | 	.long 0xcdefab
  0x5c4: abefcd00     | 	.long 0xcdefab
  0x5c8: abefcd00     | 	.long 0xcdefab
  0x5cc: abefcd00     | 	.long 0xcdefab
  0x5d0: abefcd00     | 	.long 0xcdefab
  0x5d4: abefcd00     | 	.long 0xcdefab
  0x5d8: abefcd00     | 	.long 0xcdefab
  0x5dc: abefcd00     | 	.long 0xcdefab
  0x5e0: abefcd00     | 	.long 0xcdefab
  0x5e4: abefcd00     | 	.long 0xcdefab
  0x5e8: abefcd00     | 	.long 0xcdefab
  0x5ec: abefcd00     | 	.long 0xcdefab
  0x5f0:              | Postdest:
  0x5f0: bcfade00     | 	.long 0xdefabc
                      | 
  0x5f4:              | .align 4
                      | # Run time stack
  0x5f4: 00000000     | 	.long 0
  0x5f8: 00000000     | 	.long 0
  0x5fc: 00000000     | 	.long 0
  0x600: 00000000     | 	.long 0
  0x604: 00000000     | 	.long 0
  0x608: 00000000     | 	.long 0
  0x60c: 00000000     | 	.long 0
  0x610: 00000000     | 	.long 0
  0x614: 00000000     | 	.long 0
  0x618: 00000000     | 	.long 0
  0x61c: 00000000     | 	.long 0
  0x620: 00000000     | 	.long 0
  0x624: 00000000     | 	.long 0
  0x628: 00000000     | 	.long 0
  0x62c: 00000000     | 	.long 0
  0x630: 00000000     | 	.long 0
                      | 
  0x634:              | Stack:
